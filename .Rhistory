opacity = 0.9,
downloadLink(outputId="downloadP", label = textOutput("stats"))),
fixedPanel(bottom = "1%", left = "2%", class = "panel panel-default",
opacity = 0.9,
actionButton(inputId = "show", label = "", icon = icon("fa-sharp fa-solid fa-info")), # Disclaimer
downloadButton(outputId = "downloadW", label="Stiahnuť všetky dáta")
)
),
tabPanel("Úseky",
absolutePanel(width = "100%", height="100%", opacity=0,
htmlOutput("frame"))
)
)
# SERVER ----
server <- function(input, output) {
filter_data <- eventReactive(input$load, {Sys.sleep(1)
x <- input$slider
if(x[2]==2022){
df_acc_sk[df_acc_sk$Dátum >= as.Date(paste(as.character(x[1]), "-01-01", sep=""))  &
df_acc_sk$Dátum <= as.Date(paste(as.character(x[2]), "-09-30", sep="")),]
}else{
df_acc_sk[df_acc_sk$Dátum >= as.Date(paste(as.character(x[1]), "-01-01", sep=""))  &
df_acc_sk$Dátum <= as.Date(paste(as.character(x[2]), "-12-31", sep="")),]
}
}, ignoreNULL=FALSE)
observe({output$stats <- renderText({
paste("Dané obdobie má:",
dim(filter_data())[1],"nehôd.")
})})
output$map <- renderLeaflet({
leaflet(df_acc_sk, options = leafletOptions(preferCanvas=TRUE,  minZoom = 8)) %>%
addTiles() %>%
setView(lng = 19.65, lat = 48.675, zoom = 8) %>%
fitBounds(~min(Zemepisná.dĺžka), ~min(Zemepisná.šírka),
~max(Zemepisná.dĺžka), ~max(Zemepisná.šírka)) %>%
addLayersControl(overlayGroups = c("Smrteľné nehody",
"Ťažké nehody",
"Ľahké nehody",
"Nehody bez zranení"), # Clusters
options = layersControlOptions(collapsed = FALSE),
position = 'topright') %>%
addLegend("bottomright", colors = c("black", "red", "yellow", "green"),
labels = c("Smrteľná", "Ťažká", "Ľahká", "Bez zranení"),
opacity = 1, title="Typ nehody")
}
)
observe({
shinyjs::showElement(id = 'loading')
Sys.sleep(1)
leafletProxy(mapId = "map", data = filter_data()) %>%
clearMarkers() %>%
addCircleMarkers(~Zemepisná.dĺžka, ~Zemepisná.šírka,
weight = 0.5,
col = "black",
opacity= 0.7,
fillColor = ~ifelse(Usmrtení > 0, "black",
ifelse(Ťažko.zranení>0, "red",
ifelse(Ľahko.zranení>0, "yellow", "green"))),
radius = ~ifelse(Usmrtení > 0, 4, 2.5),
fillOpacity = 0.9,
label = ~ifelse(nchar(Číslo.cesty)>2,
paste("Cesta II/", Číslo.cesty, ", km: ",
round(Kilometrovníkové.staničenie.dopravnej.nehody, 2),
sep=""),
ifelse(grepl("R", Číslo.cesty, fixed=TRUE) | grepl("D", Číslo.cesty, fixed=TRUE),
paste("Cesta ", Číslo.cesty, ", km: ",
round(Kilometrovníkové.staničenie.dopravnej.nehody, 2),
sep=""),
paste("Cesta I/", Číslo.cesty, ", km: ",
round(Kilometrovníkové.staničenie.dopravnej.nehody, 2),
sep=""))),
popup = ~paste("<strong>Dátum</strong>: ", format(Dátum, "%d. %m. %Y"),
"<br><strong>Čas</strong>: ", Čas,
"<br><strong>Okres</strong>: ", Okres,
"<br><strong>Číslo PK</strong>: ", Číslo.cesty,
"<br><strong>Lokalita</strong>: ", Lokalita.dopravnej.nehody,
"<br><strong>Smerové pomery</strong>: ", Smerové.pomery,
"<br><strong>Druh nehody</strong>: ", Druh.nehody,
"<br><strong>Počet vozidiel</strong>: ", Počet.zúčastnených.vozidiel,
"<br><strong>Zrážka vozidiel</strong>: ", Zrážka.vozidiel,
"<br><strong>Zavinenie nehody</strong>: ", Zavinenie.nehody,
"<br><strong>Príčina nehody</strong>: ", Hlavná.príčina.nehody,
"<br><strong>Prítomnosť alkoholu</strong>: ", Prítomnosť.alkoholu,
"<br><strong>Usmrtení</strong>: ", Usmrtení,
"<br><strong>Ťažko zranení</strong>: ", Ťažko.zranení,
"<br><strong>Ľahko zranení</strong>: ", Ľahko.zranení,
"<br><strong>Hmotná škoda</strong>: ", Celková.hmotná.škoda, " €",
sep=""),
group = ~ifelse(Usmrtení > 0, "Smrteľné nehody", # Úmrtia
ifelse(Ťažko.zranení>0, "Ťažké nehody",
ifelse(Ľahko.zranení>0, "Ľahké nehody",
"Nehody bez zranení"))))
shinyjs::hideElement(id = 'loading')
}
)
output$downloadP <- downloadHandler(
filename = function() {
paste("nehody-", Sys.Date(), ".csv", sep="")
},
content = function(file) {
write.csv(filter_data(),
file, fileEncoding="UTF-8")
}
)
output$downloadW <- downloadHandler(
filename = function() {
paste("nehody-vsetky-", Sys.Date(), ".csv", sep="")
},
content = function(file) {
write.csv(df_acc_sk, file, fileEncoding="UTF-8")
}
)
observeEvent(input$show, {
showModal(modalDialog(
title = "Mapa cestnej nehodovosti",
tagList("Dáta o cestnej nehodovosti sú generované zo štatistiky",
a("Ministerstva Vnútra", href="https://www.minv.sk/?kompletna-statistika",
target="_blank")),
span("a sú k dispozícii pre roky 2012 - 2022.
Nehody sú zverejnené pre cesty I. a II. triedy,
rovnako ako aj pre diaľnice a rýchlostné cesty."), br(), br(),
span("Keďže sú údaje o zemepisnej šírke a dĺžke vypočítavané dodatočne,
je možné, že pri ich generácii dochádza k odchýlkam či chybám."),
span("Účelom mapy"), strong("nie je"),
span("presné zobrazenie geografickej polohy dopravných nehôd."), br(), br(),
tagList("Údaje o cestách sú z databázy",
a("Slovenskej Správy Ciest", href="https://www.cdb.sk/sk/statisticke-vystupy.alej",
target="_blank")),
tagList("pod licenciou",
a("Creative Commons Attribution", href="http://opendefinition.org/licenses/cc-by/",
target="_blank")),
easyClose = TRUE,
footer = "Okno zavrieť kliknutím mimo"
))
})
addResourcePath("shiny_map", getwd())
output$frame <- renderUI({
tags$iframe(style='width:90vw;height:90vh;',
src="shiny_map/the_map_big.html")
})
}
# Run app ----
shinyApp(ui = ui, server = server)
# libraries
library(leaflet)
library(shiny)
library(shinyjs)
library(htmlwidgets)
library(dplyr)
library(rsconnect)
library(shinycssloaders)
library(shinyWidgets)
#######################################################
# Data
df_acc_sk = read.csv("df_acc_sk.csv", encoding="UTF-8")
df_acc_sk$Dátum = as.Date(df_acc_sk$Dátum,"%d/%m/%Y")
#######################################################
# UI ----
ui <- navbarPage(
shinyjs::useShinyjs(),
title = 'Nehodovosť SR',
tabPanel("Mapa",
tags$style(type = "text/css", "html, body {width:100%;height:100%}",
HTML("#textt {padding-left:0.75%; padding-right:0.75%; padding-top:0.12%; padding-bottom:0.1%;font-size: 90%;}")),
leafletOutput("map", width = "100%", height = "90vh"),
absolutePanel(top = "50%", left = 20, width = "97.5%", opacity=0,
(column(12,  div(style="display:center-align"),
shinyjs::hidden(div(id = 'loading', style="height:300px;width=300px;",
addSpinner(div(), spin = "bounce", color = "blue")))))),
fixedPanel(top = "9%", left = "6%", id="controls",
opacity = 0.9, draggable = FALSE,
sliderInput(
"slider",
"Dátum:",
step=1,
min = 2012,
max = 2022,
value =  c(2020, 2022),
sep=""
),
actionButton("load", "Načítať dáta")
),
fixedPanel(bottom = "5%", left = "2%", class = "panel panel-default", id="textt",
opacity = 0.9,
downloadLink(outputId="downloadP", label = textOutput("stats"))),
fixedPanel(bottom = "1%", left = "2%", class = "panel panel-default",
opacity = 0.9,
actionButton(inputId = "show", label = "", icon = icon("fa-sharp fa-solid fa-info")), # Disclaimer
downloadButton(outputId = "downloadW", label="Stiahnuť všetky dáta")
)
),
tabPanel("Úseky",
absolutePanel(width = "100%", height="100%", opacity=0,
htmlOutput("frame"))
)
)
# SERVER ----
server <- function(input, output) {
filter_data <- eventReactive(input$load, {Sys.sleep(1)
x <- input$slider
if(x[2]==2022){
df_acc_sk[df_acc_sk$Dátum >= as.Date(paste(as.character(x[1]), "-01-01", sep=""))  &
df_acc_sk$Dátum <= as.Date(paste(as.character(x[2]), "-09-30", sep="")),]
}else{
df_acc_sk[df_acc_sk$Dátum >= as.Date(paste(as.character(x[1]), "-01-01", sep=""))  &
df_acc_sk$Dátum <= as.Date(paste(as.character(x[2]), "-12-31", sep="")),]
}
}, ignoreNULL=FALSE)
observe({output$stats <- renderText({
paste("Dané obdobie má:",
dim(filter_data())[1],"nehôd.")
})})
output$map <- renderLeaflet({
leaflet(df_acc_sk, options = leafletOptions(preferCanvas=TRUE,  minZoom = 8)) %>%
addTiles() %>%
setView(lng = 19.65, lat = 48.675, zoom = 8) %>%
fitBounds(~min(Zemepisná.dĺžka), ~min(Zemepisná.šírka),
~max(Zemepisná.dĺžka), ~max(Zemepisná.šírka)) %>%
addLayersControl(overlayGroups = c("Smrteľné nehody",
"Ťažké nehody",
"Ľahké nehody",
"Nehody bez zranení"), # Clusters
options = layersControlOptions(collapsed = FALSE),
position = 'topright') %>%
addLegend("bottomright", colors = c("black", "red", "yellow", "green"),
labels = c("Smrteľná", "Ťažká", "Ľahká", "Bez zranení"),
opacity = 1, title="Typ nehody")
}
)
observe({
shinyjs::showElement(id = 'loading')
Sys.sleep(1)
leafletProxy(mapId = "map", data = filter_data()) %>%
clearMarkers() %>%
addCircleMarkers(~Zemepisná.dĺžka, ~Zemepisná.šírka,
weight = 0.5,
col = "black",
opacity= 0.7,
fillColor = ~ifelse(Usmrtení > 0, "black",
ifelse(Ťažko.zranení>0, "red",
ifelse(Ľahko.zranení>0, "yellow", "green"))),
radius = ~ifelse(Usmrtení > 0, 4, 2.5),
fillOpacity = 0.9,
label = ~ifelse(nchar(Číslo.cesty)>2,
paste("Cesta II/", Číslo.cesty, ", km: ",
round(Kilometrovníkové.staničenie.dopravnej.nehody, 2),
sep=""),
ifelse(grepl("R", Číslo.cesty, fixed=TRUE) | grepl("D", Číslo.cesty, fixed=TRUE),
paste("Cesta ", Číslo.cesty, ", km: ",
round(Kilometrovníkové.staničenie.dopravnej.nehody, 2),
sep=""),
paste("Cesta I/", Číslo.cesty, ", km: ",
round(Kilometrovníkové.staničenie.dopravnej.nehody, 2),
sep=""))),
popup = ~paste("<strong>Dátum</strong>: ", format(Dátum, "%d. %m. %Y"),
"<br><strong>Čas</strong>: ", Čas,
"<br><strong>Okres</strong>: ", Okres,
"<br><strong>Číslo PK</strong>: ", Číslo.cesty,
"<br><strong>Lokalita</strong>: ", Lokalita.dopravnej.nehody,
"<br><strong>Smerové pomery</strong>: ", Smerové.pomery,
"<br><strong>Druh nehody</strong>: ", Druh.nehody,
"<br><strong>Počet vozidiel</strong>: ", Počet.zúčastnených.vozidiel,
"<br><strong>Zrážka vozidiel</strong>: ", Zrážka.vozidiel,
"<br><strong>Zavinenie nehody</strong>: ", Zavinenie.nehody,
"<br><strong>Príčina nehody</strong>: ", Hlavná.príčina.nehody,
"<br><strong>Prítomnosť alkoholu</strong>: ", Prítomnosť.alkoholu,
"<br><strong>Usmrtení</strong>: ", Usmrtení,
"<br><strong>Ťažko zranení</strong>: ", Ťažko.zranení,
"<br><strong>Ľahko zranení</strong>: ", Ľahko.zranení,
"<br><strong>Hmotná škoda</strong>: ", Celková.hmotná.škoda, " €",
sep=""),
group = ~ifelse(Usmrtení > 0, "Smrteľné nehody", # Úmrtia
ifelse(Ťažko.zranení>0, "Ťažké nehody",
ifelse(Ľahko.zranení>0, "Ľahké nehody",
"Nehody bez zranení"))))
shinyjs::hideElement(id = 'loading')
}
)
output$downloadP <- downloadHandler(
filename = function() {
paste("nehody-", Sys.Date(), ".csv", sep="")
},
content = function(file) {
write.csv(filter_data(),
file, fileEncoding="UTF-8")
}
)
output$downloadW <- downloadHandler(
filename = function() {
paste("nehody-vsetky-", Sys.Date(), ".csv", sep="")
},
content = function(file) {
write.csv(df_acc_sk, file, fileEncoding="UTF-8")
}
)
observeEvent(input$show, {
showModal(modalDialog(
title = "Mapa cestnej nehodovosti",
tagList("Dáta o cestnej nehodovosti sú generované zo štatistiky",
a("Ministerstva Vnútra", href="https://www.minv.sk/?kompletna-statistika",
target="_blank")),
span("a sú k dispozícii pre roky 2012 - 2022.
Nehody sú zverejnené pre cesty I. a II. triedy,
rovnako ako aj pre diaľnice a rýchlostné cesty."), br(), br(),
span("Keďže sú údaje o zemepisnej šírke a dĺžke vypočítavané dodatočne,
je možné, že pri ich generácii dochádza k odchýlkam či chybám."),
span("Účelom mapy"), strong("nie je"),
span("presné zobrazenie geografickej polohy dopravných nehôd."), br(), br(),
tagList("Údaje o cestách sú z databázy",
a("Slovenskej Správy Ciest", href="https://www.cdb.sk/sk/statisticke-vystupy.alej",
target="_blank")),
tagList("pod licenciou",
a("Creative Commons Attribution", href="http://opendefinition.org/licenses/cc-by/",
target="_blank")),
easyClose = TRUE,
footer = "Okno zavrieť kliknutím mimo"
))
})
addResourcePath("shiny_map", getwd())
output$frame <- renderUI({
tags$iframe(style='width:95vw;height:85vh;',
src="shiny_map/the_map_big.html")
})
}
# Run app ----
shinyApp(ui = ui, server = server)
# libraries
library(leaflet)
library(shiny)
library(shinyjs)
library(htmlwidgets)
library(dplyr)
library(rsconnect)
library(shinycssloaders)
library(shinyWidgets)
#######################################################
# Data
df_acc_sk = read.csv("df_acc_sk.csv", encoding="UTF-8")
df_acc_sk$Dátum = as.Date(df_acc_sk$Dátum,"%d/%m/%Y")
#######################################################
# UI ----
ui <- navbarPage(
shinyjs::useShinyjs(),
title = 'Nehodovosť SR',
tabPanel("Mapa",
tags$style(type = "text/css", "html, body {width:100%;height:100%}",
HTML("#textt {padding-left:0.75%; padding-right:0.75%; padding-top:0.12%; padding-bottom:0.1%;font-size: 90%;}")),
leafletOutput("map", width = "100%", height = "90vh"),
absolutePanel(top = "50%", left = 20, width = "97.5%", opacity=0,
(column(12,  div(style="display:center-align"),
shinyjs::hidden(div(id = 'loading', style="height:300px;width=300px;",
addSpinner(div(), spin = "bounce", color = "blue")))))),
fixedPanel(top = "9%", left = "6%", id="controls",
opacity = 0.9, draggable = FALSE,
sliderInput(
"slider",
"Dátum:",
step=1,
min = 2012,
max = 2022,
value =  c(2020, 2022),
sep=""
),
actionButton("load", "Načítať dáta")
),
fixedPanel(bottom = "5%", left = "2%", class = "panel panel-default", id="textt",
opacity = 0.9,
downloadLink(outputId="downloadP", label = textOutput("stats"))),
fixedPanel(bottom = "1%", left = "2%", class = "panel panel-default",
opacity = 0.9,
actionButton(inputId = "show", label = "", icon = icon("fa-sharp fa-solid fa-info")), # Disclaimer
downloadButton(outputId = "downloadW", label="Stiahnuť všetky dáta")
)
),
tabPanel("Úseky",
absolutePanel(width = "100%", height="100%", opacity=0,
htmlOutput("frame"))
)
)
# SERVER ----
server <- function(input, output) {
filter_data <- eventReactive(input$load, {Sys.sleep(1)
x <- input$slider
if(x[2]==2022){
df_acc_sk[df_acc_sk$Dátum >= as.Date(paste(as.character(x[1]), "-01-01", sep=""))  &
df_acc_sk$Dátum <= as.Date(paste(as.character(x[2]), "-09-30", sep="")),]
}else{
df_acc_sk[df_acc_sk$Dátum >= as.Date(paste(as.character(x[1]), "-01-01", sep=""))  &
df_acc_sk$Dátum <= as.Date(paste(as.character(x[2]), "-12-31", sep="")),]
}
}, ignoreNULL=FALSE)
observe({output$stats <- renderText({
paste("Dané obdobie má:",
dim(filter_data())[1],"nehôd.")
})})
output$map <- renderLeaflet({
leaflet(df_acc_sk, options = leafletOptions(preferCanvas=TRUE,  minZoom = 8)) %>%
addTiles() %>%
setView(lng = 19.65, lat = 48.675, zoom = 8) %>%
fitBounds(~min(Zemepisná.dĺžka), ~min(Zemepisná.šírka),
~max(Zemepisná.dĺžka), ~max(Zemepisná.šírka)) %>%
addLayersControl(overlayGroups = c("Smrteľné nehody",
"Ťažké nehody",
"Ľahké nehody",
"Nehody bez zranení"), # Clusters
options = layersControlOptions(collapsed = FALSE),
position = 'topright') %>%
addLegend("bottomright", colors = c("black", "red", "yellow", "green"),
labels = c("Smrteľná", "Ťažká", "Ľahká", "Bez zranení"),
opacity = 1, title="Typ nehody")
}
)
observe({
shinyjs::showElement(id = 'loading')
Sys.sleep(1)
leafletProxy(mapId = "map", data = filter_data()) %>%
clearMarkers() %>%
addCircleMarkers(~Zemepisná.dĺžka, ~Zemepisná.šírka,
weight = 0.5,
col = "black",
opacity= 0.7,
fillColor = ~ifelse(Usmrtení > 0, "black",
ifelse(Ťažko.zranení>0, "red",
ifelse(Ľahko.zranení>0, "yellow", "green"))),
radius = ~ifelse(Usmrtení > 0, 4, 2.5),
fillOpacity = 0.9,
label = ~ifelse(nchar(Číslo.cesty)>2,
paste("Cesta II/", Číslo.cesty, ", km: ",
round(Kilometrovníkové.staničenie.dopravnej.nehody, 2),
sep=""),
ifelse(grepl("R", Číslo.cesty, fixed=TRUE) | grepl("D", Číslo.cesty, fixed=TRUE),
paste("Cesta ", Číslo.cesty, ", km: ",
round(Kilometrovníkové.staničenie.dopravnej.nehody, 2),
sep=""),
paste("Cesta I/", Číslo.cesty, ", km: ",
round(Kilometrovníkové.staničenie.dopravnej.nehody, 2),
sep=""))),
popup = ~paste("<strong>Dátum</strong>: ", format(Dátum, "%d. %m. %Y"),
"<br><strong>Čas</strong>: ", Čas,
"<br><strong>Okres</strong>: ", Okres,
"<br><strong>Číslo PK</strong>: ", Číslo.cesty,
"<br><strong>Lokalita</strong>: ", Lokalita.dopravnej.nehody,
"<br><strong>Smerové pomery</strong>: ", Smerové.pomery,
"<br><strong>Druh nehody</strong>: ", Druh.nehody,
"<br><strong>Počet vozidiel</strong>: ", Počet.zúčastnených.vozidiel,
"<br><strong>Zrážka vozidiel</strong>: ", Zrážka.vozidiel,
"<br><strong>Zavinenie nehody</strong>: ", Zavinenie.nehody,
"<br><strong>Príčina nehody</strong>: ", Hlavná.príčina.nehody,
"<br><strong>Prítomnosť alkoholu</strong>: ", Prítomnosť.alkoholu,
"<br><strong>Usmrtení</strong>: ", Usmrtení,
"<br><strong>Ťažko zranení</strong>: ", Ťažko.zranení,
"<br><strong>Ľahko zranení</strong>: ", Ľahko.zranení,
"<br><strong>Hmotná škoda</strong>: ", Celková.hmotná.škoda, " €",
sep=""),
group = ~ifelse(Usmrtení > 0, "Smrteľné nehody", # Úmrtia
ifelse(Ťažko.zranení>0, "Ťažké nehody",
ifelse(Ľahko.zranení>0, "Ľahké nehody",
"Nehody bez zranení"))))
shinyjs::hideElement(id = 'loading')
}
)
output$downloadP <- downloadHandler(
filename = function() {
paste("nehody-", Sys.Date(), ".csv", sep="")
},
content = function(file) {
write.csv(filter_data(),
file, fileEncoding="UTF-8")
}
)
output$downloadW <- downloadHandler(
filename = function() {
paste("nehody-vsetky-", Sys.Date(), ".csv", sep="")
},
content = function(file) {
write.csv(df_acc_sk, file, fileEncoding="UTF-8")
}
)
observeEvent(input$show, {
showModal(modalDialog(
title = "Mapa cestnej nehodovosti",
tagList("Dáta o cestnej nehodovosti sú generované zo štatistiky",
a("Ministerstva Vnútra", href="https://www.minv.sk/?kompletna-statistika",
target="_blank")),
span("a sú k dispozícii pre roky 2012 - 2022.
Nehody sú zverejnené pre cesty I. a II. triedy,
rovnako ako aj pre diaľnice a rýchlostné cesty."), br(), br(),
span("Keďže sú údaje o zemepisnej šírke a dĺžke vypočítavané dodatočne,
je možné, že pri ich generácii dochádza k odchýlkam či chybám."),
span("Účelom mapy"), strong("nie je"),
span("presné zobrazenie geografickej polohy dopravných nehôd."), br(), br(),
tagList("Údaje o cestách sú z databázy",
a("Slovenskej Správy Ciest", href="https://www.cdb.sk/sk/statisticke-vystupy.alej",
target="_blank")),
tagList("pod licenciou",
a("Creative Commons Attribution", href="http://opendefinition.org/licenses/cc-by/",
target="_blank")),
easyClose = TRUE,
footer = "Okno zavrieť kliknutím mimo"
))
})
addResourcePath("shiny_map", getwd())
output$frame <- renderUI({
tags$iframe(style='width:95vw;height:85vh;',
src="https://github.com/kovy21/useky/blob/main/templates/the_map.html")
})
}
# Run app ----
shinyApp(ui = ui, server = server)
library(shiny)
runApp()
runApp()
